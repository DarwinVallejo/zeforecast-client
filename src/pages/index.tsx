import Head from "next/head";
import Layout from "@/components/layout";
import {
  Alert,
  Box,
  Button,
  CircularProgress,
  Dialog,
  DialogContent,
  FormControl,
  FormLabel,
  Grid,
  Input,
  Snackbar,
  Stack,
  Typography,
} from "@mui/material";
import Section from "@/components/section";

import { Controller, useForm } from "react-hook-form";
import { ForecastSchema, forecastSchema } from "@/schemas/forecast.schema";
import { yupResolver } from "@hookform/resolvers/yup";
import { blue } from "@mui/material/colors";
import { useState } from "react";
import { MuiFileInput } from 'mui-file-input'


export default function Home() {
  const [loading, setLoading] = useState(false);

  const [openAlert, setOpenAlert] = useState(false);

  const handleClose = (
    event?: React.SyntheticEvent | Event,
    reason?: string
  ) => {
    if (reason === "clickaway") {
      return;
    }

    setOpenAlert(false);
  };

  const { register, handleSubmit, control } = useForm<ForecastSchema>({
    resolver: yupResolver(forecastSchema),
  });
  const [calendar, setCalendar] = useState(null);
  const [premises, setPremises] = useState(null);
  
  const handleCalendar = (file:any) => {
    setCalendar(file)
  }
  const handlePremises = (file:any) => {
    setPremises(file)
  }

  const onSubmit = (data: ForecastSchema) => {
    console.log(data);
    setOpenAlert(true);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <form onSubmit={handleSubmit(onSubmit)}>
          <Grid container columnGap={6} justifyContent={"center"}>
            <Grid item xs={8}>
              <Section title="Forecast">
                <Grid container>
                  <Grid item xs={6}>
                    <FormControl className="inputDate" fullWidth>
                      <FormLabel>Fecha inicial</FormLabel>
                      <Input fullWidth type="date" {...register("startDate")} />
                    </FormControl>
                  </Grid>
                  <Grid item xs={6}>
                    <FormControl className="inputDate" fullWidth>
                      <FormLabel>Fecha final</FormLabel>
                      <Input fullWidth type="date" {...register("endDate")} />
                    </FormControl>
                  </Grid>
                  <Grid item xs={6} sx={{marginTop:5}}>
                    <FormControl className="inputDate" fullWidth>
                      <FormLabel>Calendario de promociones</FormLabel>
                      <Controller
                        control={control}
                        rules={{
                          required: true,
                        }}
                        render={({ field: { onChange, value } }) => (
                          <MuiFileInput value={value} onChange={onChange} />
                        )}
                        name="calendar"
                      />
                    </FormControl>
                  </Grid>
                  <Grid item xs={6} sx={{marginTop:5}}>
                    <FormControl className="inputDate" fullWidth>
                      <FormLabel>Premisas</FormLabel>
                      <Controller
                        control={control}
                        rules={{
                          required: true,
                        }}
                        render={({ field: { onChange, value } }) => (
                          <MuiFileInput value={value} onChange={onChange} />
                        )}
                        name="premises"
                      />
                    </FormControl>
                  </Grid>
                  <Grid  item xs={6} justifyContent={"left"} sx={{marginTop:5}}>
                    <Button
                      variant="contained"
                      color="primary"
                      sx={{ width: "300px", backgroundColor: blue[800] }}
                      type="submit"
                    >
                      Procesar
                    </Button>
                  </Grid>
                </Grid>
              </Section>
            </Grid>
          </Grid>
        </form>
      </Layout>
      <Dialog open={loading}>
        <DialogContent>
          <Stack alignContent={"center"} alignItems={"center"} gap={2}>
            <CircularProgress sx={{ color: blue[500] }} />
            <Typography>Calculando</Typography>
          </Stack>
        </DialogContent>
      </Dialog>
      <Snackbar
        open={openAlert}
        autoHideDuration={6000}
        onClose={handleClose}
        anchorOrigin={{
          horizontal: "right",
          vertical: "bottom",
        }}
      >
        <Alert
          onClose={handleClose}
          variant="filled"
          severity="success"
          sx={{ width: "100%" }}
        >
          Proceso realizado correctamente
        </Alert>
      </Snackbar>
    </>
  );
}
